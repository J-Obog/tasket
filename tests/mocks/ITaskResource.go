// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	types "github.com/J-Obog/tasket/src/types"
	mock "github.com/stretchr/testify/mock"
)

// ITaskResource is an autogenerated mock type for the ITaskResource type
type ITaskResource struct {
	mock.Mock
}

// CreateTask provides a mock function with given fields: req
func (_m *ITaskResource) CreateTask(req types.RestRequest) types.RestResponse {
	ret := _m.Called(req)

	var r0 types.RestResponse
	if rf, ok := ret.Get(0).(func(types.RestRequest) types.RestResponse); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(types.RestResponse)
	}

	return r0
}

// GetTask provides a mock function with given fields: req
func (_m *ITaskResource) GetTask(req types.RestRequest) types.RestResponse {
	ret := _m.Called(req)

	var r0 types.RestResponse
	if rf, ok := ret.Get(0).(func(types.RestRequest) types.RestResponse); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(types.RestResponse)
	}

	return r0
}

// GetTaskLogs provides a mock function with given fields: req
func (_m *ITaskResource) GetTaskLogs(req types.RestRequest) types.RestResponse {
	ret := _m.Called(req)

	var r0 types.RestResponse
	if rf, ok := ret.Get(0).(func(types.RestRequest) types.RestResponse); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(types.RestResponse)
	}

	return r0
}

// GetTasks provides a mock function with given fields: req
func (_m *ITaskResource) GetTasks(req types.RestRequest) types.RestResponse {
	ret := _m.Called(req)

	var r0 types.RestResponse
	if rf, ok := ret.Get(0).(func(types.RestRequest) types.RestResponse); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(types.RestResponse)
	}

	return r0
}

// StopTask provides a mock function with given fields: req
func (_m *ITaskResource) StopTask(req types.RestRequest) types.RestResponse {
	ret := _m.Called(req)

	var r0 types.RestResponse
	if rf, ok := ret.Get(0).(func(types.RestRequest) types.RestResponse); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(types.RestResponse)
	}

	return r0
}

// UpdateTask provides a mock function with given fields: req
func (_m *ITaskResource) UpdateTask(req types.RestRequest) types.RestResponse {
	ret := _m.Called(req)

	var r0 types.RestResponse
	if rf, ok := ret.Get(0).(func(types.RestRequest) types.RestResponse); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(types.RestResponse)
	}

	return r0
}

type mockConstructorTestingTNewITaskResource interface {
	mock.TestingT
	Cleanup(func())
}

// NewITaskResource creates a new instance of ITaskResource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewITaskResource(t mockConstructorTestingTNewITaskResource) *ITaskResource {
	mock := &ITaskResource{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
